!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-script	Makefile	/^		--script=.\/hoedown --testdir=test\/MarkdownTest_1.0.3\/Tests --tidy$/;"	m
BINDIR	Makefile	/^BINDIR = $(PREFIX)\/bin$/;"	m
BUFFER_BLOCK	src/document.c	18;"	d	file:
BUFFER_SPAN	src/document.c	19;"	d	file:
CFLAGS	Makefile	/^CFLAGS = -g -O3 -ansi -pedantic -Wall -Wextra -Wno-unused-parameter$/;"	m
CONFIG_PATH	test/runner.py	/^CONFIG_PATH = os.path.join(TEST_ROOT, 'config.json')$/;"	v
DEF_IUNIT	bin/hoedown.c	70;"	d	file:
DEF_IUNIT	bin/smartypants.c	9;"	d	file:
DEF_MAX_NESTING	bin/hoedown.c	72;"	d	file:
DEF_OUNIT	bin/hoedown.c	71;"	d	file:
DEF_OUNIT	bin/smartypants.c	10;"	d	file:
GPERF_CASE_STRNCMP	src/html_blocks.c	60;"	d	file:
GPERF_DOWNCASE	src/html_blocks.c	35;"	d	file:
HOEDOWN	test/runner.py	/^HOEDOWN = [os.path.abspath(os.path.join(PROJECT_ROOT, 'hoedown'))]$/;"	v
HOEDOWN_AUTOLINK_EMAIL	src/document.h	/^	HOEDOWN_AUTOLINK_EMAIL		\/* e-mail link without explit mailto: *\/$/;"	e	enum:hoedown_autolink_type
HOEDOWN_AUTOLINK_H	src/autolink.h	4;"	d
HOEDOWN_AUTOLINK_NONE	src/document.h	/^	HOEDOWN_AUTOLINK_NONE,		\/* used internally when it is not an autolink*\/$/;"	e	enum:hoedown_autolink_type
HOEDOWN_AUTOLINK_NORMAL	src/document.h	/^	HOEDOWN_AUTOLINK_NORMAL,	\/* normal http\/http\/ftp\/mailto\/etc link *\/$/;"	e	enum:hoedown_autolink_type
HOEDOWN_AUTOLINK_SHORT_DOMAINS	src/autolink.h	/^	HOEDOWN_AUTOLINK_SHORT_DOMAINS = (1 << 0)$/;"	e	enum:hoedown_autolink_flags
HOEDOWN_BUFEQSL	src/buffer.h	126;"	d
HOEDOWN_BUFFER_H	src/buffer.h	4;"	d
HOEDOWN_BUFPUTSL	src/buffer.h	118;"	d
HOEDOWN_BUFSETSL	src/buffer.h	122;"	d
HOEDOWN_CFLAGS	Makefile	/^HOEDOWN_CFLAGS = $(CFLAGS) -Isrc$/;"	m
HOEDOWN_DOCUMENT_H	src/document.h	4;"	d
HOEDOWN_ESCAPE_H	src/escape.h	4;"	d
HOEDOWN_EXT_AUTOLINK	src/document.h	/^	HOEDOWN_EXT_AUTOLINK = (1 << 3),$/;"	e	enum:hoedown_extensions
HOEDOWN_EXT_BLOCK	src/document.h	42;"	d
HOEDOWN_EXT_DISABLE_INDENTED_CODE	src/document.h	/^	HOEDOWN_EXT_DISABLE_INDENTED_CODE = (1 << 14)$/;"	e	enum:hoedown_extensions
HOEDOWN_EXT_FENCED_CODE	src/document.h	/^	HOEDOWN_EXT_FENCED_CODE = (1 << 1),$/;"	e	enum:hoedown_extensions
HOEDOWN_EXT_FLAGS	src/document.h	56;"	d
HOEDOWN_EXT_FOOTNOTES	src/document.h	/^	HOEDOWN_EXT_FOOTNOTES = (1 << 2),$/;"	e	enum:hoedown_extensions
HOEDOWN_EXT_HIGHLIGHT	src/document.h	/^	HOEDOWN_EXT_HIGHLIGHT = (1 << 6),$/;"	e	enum:hoedown_extensions
HOEDOWN_EXT_MATH	src/document.h	/^	HOEDOWN_EXT_MATH = (1 << 9),$/;"	e	enum:hoedown_extensions
HOEDOWN_EXT_MATH_EXPLICIT	src/document.h	/^	HOEDOWN_EXT_MATH_EXPLICIT = (1 << 13),$/;"	e	enum:hoedown_extensions
HOEDOWN_EXT_NEGATIVE	src/document.h	61;"	d
HOEDOWN_EXT_NO_INTRA_EMPHASIS	src/document.h	/^	HOEDOWN_EXT_NO_INTRA_EMPHASIS = (1 << 11),$/;"	e	enum:hoedown_extensions
HOEDOWN_EXT_QUOTE	src/document.h	/^	HOEDOWN_EXT_QUOTE = (1 << 7),$/;"	e	enum:hoedown_extensions
HOEDOWN_EXT_SPACE_HEADERS	src/document.h	/^	HOEDOWN_EXT_SPACE_HEADERS = (1 << 12),$/;"	e	enum:hoedown_extensions
HOEDOWN_EXT_SPAN	src/document.h	47;"	d
HOEDOWN_EXT_STRIKETHROUGH	src/document.h	/^	HOEDOWN_EXT_STRIKETHROUGH = (1 << 4),$/;"	e	enum:hoedown_extensions
HOEDOWN_EXT_SUPERSCRIPT	src/document.h	/^	HOEDOWN_EXT_SUPERSCRIPT = (1 << 8),$/;"	e	enum:hoedown_extensions
HOEDOWN_EXT_TABLES	src/document.h	/^	HOEDOWN_EXT_TABLES = (1 << 0),$/;"	e	enum:hoedown_extensions
HOEDOWN_EXT_UNDERLINE	src/document.h	/^	HOEDOWN_EXT_UNDERLINE = (1 << 5),$/;"	e	enum:hoedown_extensions
HOEDOWN_HTML_ESCAPE	src/html.h	/^	HOEDOWN_HTML_ESCAPE = (1 << 1),$/;"	e	enum:hoedown_html_flags
HOEDOWN_HTML_H	src/html.h	4;"	d
HOEDOWN_HTML_HARD_WRAP	src/html.h	/^	HOEDOWN_HTML_HARD_WRAP = (1 << 2),$/;"	e	enum:hoedown_html_flags
HOEDOWN_HTML_SKIP_HTML	src/html.h	/^	HOEDOWN_HTML_SKIP_HTML = (1 << 0),$/;"	e	enum:hoedown_html_flags
HOEDOWN_HTML_TAG_CLOSE	src/html.h	/^	HOEDOWN_HTML_TAG_CLOSE$/;"	e	enum:hoedown_html_tag
HOEDOWN_HTML_TAG_NONE	src/html.h	/^	HOEDOWN_HTML_TAG_NONE = 0,$/;"	e	enum:hoedown_html_tag
HOEDOWN_HTML_TAG_OPEN	src/html.h	/^	HOEDOWN_HTML_TAG_OPEN,$/;"	e	enum:hoedown_html_tag
HOEDOWN_HTML_USE_XHTML	src/html.h	/^	HOEDOWN_HTML_USE_XHTML = (1 << 3)$/;"	e	enum:hoedown_html_flags
HOEDOWN_LIST_ORDERED	src/document.h	/^	HOEDOWN_LIST_ORDERED = (1 << 0),$/;"	e	enum:hoedown_list_flags
HOEDOWN_LI_BLOCK	src/document.h	/^	HOEDOWN_LI_BLOCK = (1 << 1)	\/* <li> containing block data *\/$/;"	e	enum:hoedown_list_flags
HOEDOWN_LI_END	src/document.c	21;"	d	file:
HOEDOWN_SRC	Makefile	/^HOEDOWN_SRC=\\$/;"	m
HOEDOWN_STACK_H	src/stack.h	4;"	d
HOEDOWN_TABLE_ALIGNMASK	src/document.h	/^	HOEDOWN_TABLE_ALIGNMASK = 3,$/;"	e	enum:hoedown_table_flags
HOEDOWN_TABLE_ALIGN_CENTER	src/document.h	/^	HOEDOWN_TABLE_ALIGN_CENTER = 3,$/;"	e	enum:hoedown_table_flags
HOEDOWN_TABLE_ALIGN_LEFT	src/document.h	/^	HOEDOWN_TABLE_ALIGN_LEFT = 1,$/;"	e	enum:hoedown_table_flags
HOEDOWN_TABLE_ALIGN_RIGHT	src/document.h	/^	HOEDOWN_TABLE_ALIGN_RIGHT = 2,$/;"	e	enum:hoedown_table_flags
HOEDOWN_TABLE_HEADER	src/document.h	/^	HOEDOWN_TABLE_HEADER = 4$/;"	e	enum:hoedown_table_flags
HOEDOWN_VERSION	src/version.h	15;"	d
HOEDOWN_VERSION_H	src/version.h	4;"	d
HOEDOWN_VERSION_MAJOR	src/version.h	16;"	d
HOEDOWN_VERSION_MINOR	src/version.h	17;"	d
HOEDOWN_VERSION_REVISION	src/version.h	18;"	d
HREF_SAFE	src/escape.c	/^static const uint8_t HREF_SAFE[UINT8_MAX+1] = {$/;"	v	file:
HTML_ESCAPES	src/escape.c	/^static const char *HTML_ESCAPES[] = {$/;"	v	file:
HTML_ESCAPE_TABLE	src/escape.c	/^static const uint8_t HTML_ESCAPE_TABLE[UINT8_MAX+1] = {$/;"	v	file:
INCLUDEDIR	Makefile	/^INCLUDEDIR = $(PREFIX)\/include$/;"	m
LIBDIR	Makefile	/^LIBDIR = $(PREFIX)\/lib$/;"	m
MD_CHAR_AUTOLINK_EMAIL	src/document.c	/^	MD_CHAR_AUTOLINK_EMAIL,$/;"	e	enum:markdown_char_t	file:
MD_CHAR_AUTOLINK_URL	src/document.c	/^	MD_CHAR_AUTOLINK_URL,$/;"	e	enum:markdown_char_t	file:
MD_CHAR_AUTOLINK_WWW	src/document.c	/^	MD_CHAR_AUTOLINK_WWW,$/;"	e	enum:markdown_char_t	file:
MD_CHAR_CODESPAN	src/document.c	/^	MD_CHAR_CODESPAN,$/;"	e	enum:markdown_char_t	file:
MD_CHAR_EMPHASIS	src/document.c	/^	MD_CHAR_EMPHASIS,$/;"	e	enum:markdown_char_t	file:
MD_CHAR_ENTITY	src/document.c	/^	MD_CHAR_ENTITY,$/;"	e	enum:markdown_char_t	file:
MD_CHAR_ESCAPE	src/document.c	/^	MD_CHAR_ESCAPE,$/;"	e	enum:markdown_char_t	file:
MD_CHAR_LANGLE	src/document.c	/^	MD_CHAR_LANGLE,$/;"	e	enum:markdown_char_t	file:
MD_CHAR_LINEBREAK	src/document.c	/^	MD_CHAR_LINEBREAK,$/;"	e	enum:markdown_char_t	file:
MD_CHAR_LINK	src/document.c	/^	MD_CHAR_LINK,$/;"	e	enum:markdown_char_t	file:
MD_CHAR_MATH	src/document.c	/^	MD_CHAR_MATH$/;"	e	enum:markdown_char_t	file:
MD_CHAR_NONE	src/document.c	/^	MD_CHAR_NONE = 0,$/;"	e	enum:markdown_char_t	file:
MD_CHAR_QUOTE	src/document.c	/^	MD_CHAR_QUOTE,$/;"	e	enum:markdown_char_t	file:
MD_CHAR_SUPERSCRIPT	src/document.c	/^	MD_CHAR_SUPERSCRIPT,$/;"	e	enum:markdown_char_t	file:
MarkdownTests	test/runner.py	/^class MarkdownTests(with_metaclass(MarkdownTestsMeta, unittest.TestCase)):$/;"	c
MarkdownTestsMeta	test/runner.py	/^class MarkdownTestsMeta(type):$/;"	c
PREFIX	Makefile	/^PREFIX = \/usr\/local$/;"	m
PROJECT_ROOT	test/runner.py	/^PROJECT_ROOT = os.path.dirname(TEST_ROOT)$/;"	v
REF_TABLE_SIZE	src/document.c	16;"	d	file:
RENDERER_HTML	bin/hoedown.c	/^	RENDERER_HTML,$/;"	e	enum:renderer_type	file:
RENDERER_HTML_TOC	bin/hoedown.c	/^	RENDERER_HTML_TOC$/;"	e	enum:renderer_type	file:
SLUGIFY_PATTERN	test/runner.py	/^SLUGIFY_PATTERN = re.compile(r'\\W')$/;"	v
TEST	test/MarkdownTest_1.0.3/MarkdownTest.pl	/^TEST:$/;"	l
TEST_ROOT	test/runner.py	/^TEST_ROOT = os.path.dirname(__file__)$/;"	v
TIDY	test/runner.py	/^TIDY = ['tidy', '--show-body-only', '1', '--show-warnings', '0',$/;"	v
TestFailed	test/runner.py	/^class TestFailed(AssertionError):$/;"	c
USE_XHTML	src/html.c	10;"	d	file:
__attribute__	src/buffer.h	17;"	d
__builtin_expect	src/buffer.h	19;"	d
__init__	test/runner.py	/^    def __init__(self, name, expected, got):$/;"	m	class:TestFailed
__new__	test/runner.py	/^        def __new__(cls, name, this_bases, d):$/;"	m	class:with_metaclass.metaclass	file:
__new__	test/runner.py	/^    def __new__(meta, name, bases, attrs):$/;"	m	class:MarkdownTestsMeta	file:
__str	bin/common.h	9;"	d
__str__	test/runner.py	/^    def __str__(self):$/;"	m	class:TestFailed	file:
_isspace	src/document.c	/^_isspace(int c)$/;"	f	file:
_make_test	test/runner.py	/^def _make_test(test_case):$/;"	f
_test_func	test/runner.py	/^def _test_func(test_case):$/;"	f
active_char	src/document.c	/^	uint8_t active_char[256];$/;"	m	struct:hoedown_document	file:
add_footnote_ref	src/document.c	/^add_footnote_ref(struct footnote_list *list, struct footnote_ref *ref)$/;"	f	file:
add_link_ref	src/document.c	/^add_link_ref($/;"	f	file:
asize	src/buffer.h	/^	size_t asize;	\/* allocated size (0 = volatile buffer) *\/$/;"	m	struct:hoedown_buffer
asize	src/stack.h	/^	size_t asize;$/;"	m	struct:hoedown_stack
autolink	src/document.h	/^	int (*autolink)(hoedown_buffer *ob, const hoedown_buffer *link, hoedown_autolink_type type, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
autolink_delim	src/autolink.c	/^autolink_delim(uint8_t *data, size_t link_end, size_t max_rewind, size_t size)$/;"	f	file:
basename	bin/hoedown.c	/^	char *basename;$/;"	m	struct:option_data	file:
basename	bin/smartypants.c	/^	char *basename;$/;"	m	struct:option_data	file:
blockcode	src/document.h	/^	void (*blockcode)(hoedown_buffer *ob, const hoedown_buffer *text, const hoedown_buffer *lang, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
blockhtml	src/document.h	/^	void (*blockhtml)(hoedown_buffer *ob, const hoedown_buffer *text, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
blockquote	src/document.h	/^	void (*blockquote)(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
buffer_free	src/buffer.h	/^	hoedown_free_callback buffer_free;$/;"	m	struct:hoedown_buffer
categories_info	bin/hoedown.c	/^static struct extension_category_info categories_info[] = {$/;"	v	typeref:struct:extension_category_info	file:
category_prefix	bin/hoedown.c	/^static const char *category_prefix = "all-";$/;"	v	file:
char_autolink_email	src/document.c	/^char_autolink_email(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t offset, size_t size)$/;"	f	file:
char_autolink_url	src/document.c	/^char_autolink_url(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t offset, size_t size)$/;"	f	file:
char_autolink_www	src/document.c	/^char_autolink_www(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t offset, size_t size)$/;"	f	file:
char_codespan	src/document.c	/^char_codespan(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t offset, size_t size)$/;"	f	file:
char_emphasis	src/document.c	/^char_emphasis(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t offset, size_t size)$/;"	f	file:
char_entity	src/document.c	/^char_entity(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t offset, size_t size)$/;"	f	file:
char_escape	src/document.c	/^char_escape(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t offset, size_t size)$/;"	f	file:
char_langle_tag	src/document.c	/^char_langle_tag(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t offset, size_t size)$/;"	f	file:
char_linebreak	src/document.c	/^char_linebreak(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t offset, size_t size)$/;"	f	file:
char_link	src/document.c	/^char_link(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t offset, size_t size)$/;"	f	file:
char_math	src/document.c	/^char_math(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t offset, size_t size)$/;"	f	file:
char_quote	src/document.c	/^char_quote(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t offset, size_t size)$/;"	f	file:
char_superscript	src/document.c	/^char_superscript(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t offset, size_t size)$/;"	f	file:
char_trigger	src/document.c	/^(*char_trigger)(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t offset, size_t size);$/;"	t	file:
check_domain	src/autolink.c	/^check_domain(uint8_t *data, size_t size, int allow_short)$/;"	f	file:
codespan	src/document.h	/^	int (*codespan)(hoedown_buffer *ob, const hoedown_buffer *text, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
contents	src/document.c	/^	hoedown_buffer *contents;$/;"	m	struct:footnote_ref	file:
count	src/document.c	/^	unsigned int count;$/;"	m	struct:footnote_list	file:
count_of	bin/common.h	11;"	d
create_footnote_ref	src/document.c	/^create_footnote_ref(struct footnote_list *list, const uint8_t *name, size_t name_size)$/;"	f	file:
current_level	src/html.h	/^		int current_level;$/;"	m	struct:hoedown_html_renderer_state::__anon1
data	src/buffer.h	/^	uint8_t *data;	\/* actual character data *\/$/;"	m	struct:hoedown_buffer
data	src/document.c	/^	hoedown_renderer_data data;$/;"	m	struct:hoedown_document	file:
data_free	src/buffer.h	/^	hoedown_free_callback data_free;$/;"	m	struct:hoedown_buffer
data_realloc	src/buffer.h	/^	hoedown_realloc_callback data_realloc;$/;"	m	struct:hoedown_buffer
description	bin/hoedown.c	/^	const char *description;$/;"	m	struct:extension_info	file:
description	bin/hoedown.c	/^	const char *description;$/;"	m	struct:html_flag_info	file:
doc_footer	src/document.h	/^	void (*doc_footer)(hoedown_buffer *ob, int inline_render, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
doc_header	src/document.h	/^	void (*doc_header)(hoedown_buffer *ob, int inline_render, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
done	bin/hoedown.c	/^	int done;$/;"	m	struct:option_data	file:
done	bin/smartypants.c	/^	int done;$/;"	m	struct:option_data	file:
double_emphasis	src/document.h	/^	int (*double_emphasis)(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
emphasis	src/document.h	/^	int (*emphasis)(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
entity	src/document.h	/^	void (*entity)(hoedown_buffer *ob, const hoedown_buffer *text, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
escape_href	src/html.c	/^static void escape_href(hoedown_buffer *ob, const uint8_t *source, size_t length)$/;"	f	file:
escape_html	src/html.c	/^static void escape_html(hoedown_buffer *ob, const uint8_t *source, size_t length)$/;"	f	file:
expand_tabs	src/document.c	/^static void expand_tabs(hoedown_buffer *ob, const uint8_t *line, size_t size)$/;"	f	file:
ext_flags	src/document.c	/^	hoedown_extensions ext_flags;$/;"	m	struct:hoedown_document	file:
extension_category_info	bin/hoedown.c	/^struct extension_category_info {$/;"	s	file:
extension_info	bin/hoedown.c	/^struct extension_info {$/;"	s	file:
extensions	bin/hoedown.c	/^	hoedown_extensions extensions;$/;"	m	struct:option_data	file:
extensions_info	bin/hoedown.c	/^static struct extension_info extensions_info[] = {$/;"	v	typeref:struct:extension_info	file:
filename	bin/hoedown.c	/^	const char *filename;$/;"	m	struct:option_data	file:
filename	bin/smartypants.c	/^	const char *filename;$/;"	m	struct:option_data	file:
find_emph_char	src/document.c	/^find_emph_char(uint8_t *data, size_t size, uint8_t c)$/;"	f	file:
find_footnote_ref	src/document.c	/^find_footnote_ref(struct footnote_list *list, uint8_t *name, size_t length)$/;"	f	file:
find_link_ref	src/document.c	/^find_link_ref(struct link_ref **references, uint8_t *name, size_t length)$/;"	f	file:
flag	bin/hoedown.c	/^	unsigned int flag;$/;"	m	struct:extension_info	file:
flag	bin/hoedown.c	/^	unsigned int flag;$/;"	m	struct:html_flag_info	file:
flags	bin/hoedown.c	/^	unsigned int flags;$/;"	m	struct:extension_category_info	file:
flags	src/html.h	/^	hoedown_html_flags flags;$/;"	m	struct:hoedown_html_renderer_state
footnote_def	src/document.h	/^	void (*footnote_def)(hoedown_buffer *ob, const hoedown_buffer *content, unsigned int num, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
footnote_item	src/document.c	/^struct footnote_item {$/;"	s	file:
footnote_list	src/document.c	/^struct footnote_list {$/;"	s	file:
footnote_ref	src/document.c	/^struct footnote_ref {$/;"	s	file:
footnote_ref	src/document.h	/^	int (*footnote_ref)(hoedown_buffer *ob, unsigned int num, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
footnotes	src/document.h	/^	void (*footnotes)(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
footnotes_found	src/document.c	/^	struct footnote_list footnotes_found;$/;"	m	struct:hoedown_document	typeref:struct:hoedown_document::footnote_list	file:
footnotes_used	src/document.c	/^	struct footnote_list footnotes_used;$/;"	m	struct:hoedown_document	typeref:struct:hoedown_document::footnote_list	file:
free_footnote_list	src/document.c	/^free_footnote_list(struct footnote_list *list, int free_refs)$/;"	f	file:
free_footnote_ref	src/document.c	/^free_footnote_ref(struct footnote_ref *ref)$/;"	f	file:
free_link_refs	src/document.c	/^free_link_refs(struct link_ref **references)$/;"	f	file:
gperf_case_strncmp	src/html_blocks.c	/^gperf_case_strncmp (register const char *s1, register const char *s2, register unsigned int n)$/;"	f	file:
gperf_downcase	src/html_blocks.c	/^static unsigned char gperf_downcase[256] =$/;"	v	file:
hash	src/html_blocks.c	/^hash (register const char *str, register unsigned int len)$/;"	f	file:
hash_link_ref	src/document.c	/^hash_link_ref(const uint8_t *link_ref, size_t length)$/;"	f	file:
head	src/document.c	/^	struct footnote_item *head;$/;"	m	struct:footnote_list	typeref:struct:footnote_list::footnote_item	file:
header	src/document.h	/^	void (*header)(hoedown_buffer *ob, const hoedown_buffer *content, int level, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
header_count	src/html.h	/^		int header_count;$/;"	m	struct:hoedown_html_renderer_state::__anon1
highlight	src/document.h	/^	int (*highlight)(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
hoedown_autolink__email	src/autolink.c	/^hoedown_autolink__email($/;"	f
hoedown_autolink__url	src/autolink.c	/^hoedown_autolink__url($/;"	f
hoedown_autolink__www	src/autolink.c	/^hoedown_autolink__www($/;"	f
hoedown_autolink_flags	src/autolink.h	/^typedef enum hoedown_autolink_flags {$/;"	g
hoedown_autolink_flags	src/autolink.h	/^} hoedown_autolink_flags;$/;"	t	typeref:enum:hoedown_autolink_flags
hoedown_autolink_is_safe	src/autolink.c	/^hoedown_autolink_is_safe(const uint8_t *data, size_t size)$/;"	f
hoedown_autolink_type	src/document.h	/^typedef enum hoedown_autolink_type {$/;"	g
hoedown_autolink_type	src/document.h	/^} hoedown_autolink_type;$/;"	t	typeref:enum:hoedown_autolink_type
hoedown_buffer	src/buffer.h	/^struct hoedown_buffer {$/;"	s
hoedown_buffer	src/buffer.h	/^typedef struct hoedown_buffer hoedown_buffer;$/;"	t	typeref:struct:hoedown_buffer
hoedown_buffer_cstr	src/buffer.c	/^hoedown_buffer_cstr(hoedown_buffer *buf)$/;"	f
hoedown_buffer_eq	src/buffer.c	/^hoedown_buffer_eq(const hoedown_buffer *buf, const uint8_t *data, size_t size)$/;"	f
hoedown_buffer_eqs	src/buffer.c	/^hoedown_buffer_eqs(const hoedown_buffer *buf, const char *str)$/;"	f
hoedown_buffer_free	src/buffer.c	/^hoedown_buffer_free(hoedown_buffer *buf)$/;"	f
hoedown_buffer_grow	src/buffer.c	/^hoedown_buffer_grow(hoedown_buffer *buf, size_t neosz)$/;"	f
hoedown_buffer_init	src/buffer.c	/^hoedown_buffer_init($/;"	f
hoedown_buffer_new	src/buffer.c	/^hoedown_buffer_new(size_t unit)$/;"	f
hoedown_buffer_prefix	src/buffer.c	/^hoedown_buffer_prefix(const hoedown_buffer *buf, const char *prefix)$/;"	f
hoedown_buffer_printf	src/buffer.c	/^hoedown_buffer_printf(hoedown_buffer *buf, const char *fmt, ...)$/;"	f
hoedown_buffer_put	src/buffer.c	/^hoedown_buffer_put(hoedown_buffer *buf, const uint8_t *data, size_t size)$/;"	f
hoedown_buffer_put_utf8	src/buffer.c	/^void hoedown_buffer_put_utf8(hoedown_buffer *buf, unsigned int c) {$/;"	f
hoedown_buffer_putc	src/buffer.c	/^hoedown_buffer_putc(hoedown_buffer *buf, uint8_t c)$/;"	f
hoedown_buffer_putf	src/buffer.c	/^hoedown_buffer_putf(hoedown_buffer *buf, FILE *file)$/;"	f
hoedown_buffer_puts	src/buffer.c	/^hoedown_buffer_puts(hoedown_buffer *buf, const char *str)$/;"	f
hoedown_buffer_reset	src/buffer.c	/^hoedown_buffer_reset(hoedown_buffer *buf)$/;"	f
hoedown_buffer_set	src/buffer.c	/^hoedown_buffer_set(hoedown_buffer *buf, const uint8_t *data, size_t size)$/;"	f
hoedown_buffer_sets	src/buffer.c	/^hoedown_buffer_sets(hoedown_buffer *buf, const char *str)$/;"	f
hoedown_buffer_slurp	src/buffer.c	/^hoedown_buffer_slurp(hoedown_buffer *buf, size_t size)$/;"	f
hoedown_buffer_uninit	src/buffer.c	/^hoedown_buffer_uninit(hoedown_buffer *buf)$/;"	f
hoedown_calloc	src/buffer.c	/^hoedown_calloc(size_t nmemb, size_t size)$/;"	f
hoedown_document	src/document.c	/^struct hoedown_document {$/;"	s	file:
hoedown_document	src/document.h	/^typedef struct hoedown_document hoedown_document;$/;"	t	typeref:struct:hoedown_document
hoedown_document_free	src/document.c	/^hoedown_document_free(hoedown_document *doc)$/;"	f
hoedown_document_new	src/document.c	/^hoedown_document_new($/;"	f
hoedown_document_render	src/document.c	/^hoedown_document_render(hoedown_document *doc, hoedown_buffer *ob, const uint8_t *data, size_t size)$/;"	f
hoedown_document_render_inline	src/document.c	/^hoedown_document_render_inline(hoedown_document *doc, hoedown_buffer *ob, const uint8_t *data, size_t size)$/;"	f
hoedown_escape_href	src/escape.c	/^hoedown_escape_href(hoedown_buffer *ob, const uint8_t *data, size_t size)$/;"	f
hoedown_escape_html	src/escape.c	/^hoedown_escape_html(hoedown_buffer *ob, const uint8_t *data, size_t size, int secure)$/;"	f
hoedown_extensions	src/document.h	/^typedef enum hoedown_extensions {$/;"	g
hoedown_extensions	src/document.h	/^} hoedown_extensions;$/;"	t	typeref:enum:hoedown_extensions
hoedown_find_block_tag	src/html_blocks.c	/^hoedown_find_block_tag (register const char *str, register unsigned int len)$/;"	f
hoedown_free_callback	src/buffer.h	/^typedef void (*hoedown_free_callback)(void *);$/;"	t
hoedown_html_flags	src/html.h	/^typedef enum hoedown_html_flags {$/;"	g
hoedown_html_flags	src/html.h	/^} hoedown_html_flags;$/;"	t	typeref:enum:hoedown_html_flags
hoedown_html_is_tag	src/html.c	/^hoedown_html_is_tag(const uint8_t *data, size_t size, const char *tagname)$/;"	f
hoedown_html_renderer_free	src/html.c	/^hoedown_html_renderer_free(hoedown_renderer *renderer)$/;"	f
hoedown_html_renderer_new	src/html.c	/^hoedown_html_renderer_new(hoedown_html_flags render_flags, int nesting_level)$/;"	f
hoedown_html_renderer_state	src/html.h	/^struct hoedown_html_renderer_state {$/;"	s
hoedown_html_renderer_state	src/html.h	/^typedef struct hoedown_html_renderer_state hoedown_html_renderer_state;$/;"	t	typeref:struct:hoedown_html_renderer_state
hoedown_html_smartypants	src/html_smartypants.c	/^hoedown_html_smartypants(hoedown_buffer *ob, const uint8_t *text, size_t size)$/;"	f
hoedown_html_tag	src/html.h	/^typedef enum hoedown_html_tag {$/;"	g
hoedown_html_tag	src/html.h	/^} hoedown_html_tag;$/;"	t	typeref:enum:hoedown_html_tag
hoedown_html_toc_renderer_new	src/html.c	/^hoedown_html_toc_renderer_new(int nesting_level)$/;"	f
hoedown_list_flags	src/document.h	/^typedef enum hoedown_list_flags {$/;"	g
hoedown_list_flags	src/document.h	/^} hoedown_list_flags;$/;"	t	typeref:enum:hoedown_list_flags
hoedown_malloc	src/buffer.c	/^hoedown_malloc(size_t size)$/;"	f
hoedown_realloc	src/buffer.c	/^hoedown_realloc(void *ptr, size_t size)$/;"	f
hoedown_realloc_callback	src/buffer.h	/^typedef void *(*hoedown_realloc_callback)(void *, size_t);$/;"	t
hoedown_renderer	src/document.h	/^struct hoedown_renderer {$/;"	s
hoedown_renderer	src/document.h	/^typedef struct hoedown_renderer hoedown_renderer;$/;"	t	typeref:struct:hoedown_renderer
hoedown_renderer_data	src/document.h	/^struct hoedown_renderer_data {$/;"	s
hoedown_renderer_data	src/document.h	/^typedef struct hoedown_renderer_data hoedown_renderer_data;$/;"	t	typeref:struct:hoedown_renderer_data
hoedown_stack	src/stack.h	/^struct hoedown_stack {$/;"	s
hoedown_stack	src/stack.h	/^typedef struct hoedown_stack hoedown_stack;$/;"	t	typeref:struct:hoedown_stack
hoedown_stack_grow	src/stack.c	/^hoedown_stack_grow(hoedown_stack *st, size_t neosz)$/;"	f
hoedown_stack_init	src/stack.c	/^hoedown_stack_init(hoedown_stack *st, size_t initial_size)$/;"	f
hoedown_stack_pop	src/stack.c	/^hoedown_stack_pop(hoedown_stack *st)$/;"	f
hoedown_stack_push	src/stack.c	/^hoedown_stack_push(hoedown_stack *st, void *item)$/;"	f
hoedown_stack_top	src/stack.c	/^hoedown_stack_top(const hoedown_stack *st)$/;"	f
hoedown_stack_uninit	src/stack.c	/^hoedown_stack_uninit(hoedown_stack *st)$/;"	f
hoedown_table_flags	src/document.h	/^typedef enum hoedown_table_flags {$/;"	g
hoedown_table_flags	src/document.h	/^} hoedown_table_flags;$/;"	t	typeref:enum:hoedown_table_flags
hoedown_version	src/version.c	/^hoedown_version(int *major, int *minor, int *revision)$/;"	f
hrule	src/document.h	/^	void (*hrule)(hoedown_buffer *ob, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
html_flag_info	bin/hoedown.c	/^struct html_flag_info {$/;"	s	file:
html_flags	bin/hoedown.c	/^	hoedown_html_flags html_flags;$/;"	m	struct:option_data	file:
html_flags_info	bin/hoedown.c	/^static struct html_flag_info html_flags_info[] = {$/;"	v	typeref:struct:html_flag_info	file:
htmlblock_find_end	src/document.c	/^htmlblock_find_end($/;"	f	file:
htmlblock_find_end_strict	src/document.c	/^htmlblock_find_end_strict($/;"	f	file:
htmlblock_is_end	src/document.c	/^htmlblock_is_end($/;"	f	file:
id	src/document.c	/^	unsigned int id;$/;"	m	struct:footnote_ref	file:
id	src/document.c	/^	unsigned int id;$/;"	m	struct:link_ref	file:
image	src/document.h	/^	int (*image)(hoedown_buffer *ob, const hoedown_buffer *link, const hoedown_buffer *title, const hoedown_buffer *alt, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
in_dquote	src/html_smartypants.c	/^	int in_dquote;$/;"	m	struct:smartypants_data	file:
in_link_body	src/document.c	/^	int in_link_body;$/;"	m	struct:hoedown_document	file:
in_squote	src/html_smartypants.c	/^	int in_squote;$/;"	m	struct:smartypants_data	file:
inline	src/buffer.h	18;"	d
is_atxheader	src/document.c	/^is_atxheader(hoedown_document *doc, uint8_t *data, size_t size)$/;"	f	file:
is_codefence	src/document.c	/^is_codefence(uint8_t *data, size_t size, size_t *width, uint8_t *chr)$/;"	f	file:
is_empty	src/document.c	/^is_empty(const uint8_t *data, size_t size)$/;"	f	file:
is_empty_all	src/document.c	/^is_empty_all(const uint8_t *data, size_t size)$/;"	f	file:
is_escaped	src/document.c	/^is_escaped(uint8_t *data, size_t loc)$/;"	f	file:
is_footnote	src/document.c	/^is_footnote(const uint8_t *data, size_t beg, size_t end, size_t *last, struct footnote_list *list)$/;"	f	file:
is_headerline	src/document.c	/^is_headerline(uint8_t *data, size_t size)$/;"	f	file:
is_hrule	src/document.c	/^is_hrule(uint8_t *data, size_t size)$/;"	f	file:
is_mail_autolink	src/document.c	/^is_mail_autolink(uint8_t *data, size_t size)$/;"	f	file:
is_next_headerline	src/document.c	/^is_next_headerline(uint8_t *data, size_t size)$/;"	f	file:
is_ref	src/document.c	/^is_ref(const uint8_t *data, size_t beg, size_t end, size_t *last, struct link_ref **refs)$/;"	f	file:
is_used	src/document.c	/^	int is_used;$/;"	m	struct:footnote_ref	file:
item	src/stack.h	/^	void **item;$/;"	m	struct:hoedown_stack
iunit	bin/hoedown.c	/^	size_t iunit;$/;"	m	struct:option_data	file:
iunit	bin/smartypants.c	/^	size_t iunit;$/;"	m	struct:option_data	file:
label	bin/hoedown.c	/^	const char *label;$/;"	m	struct:extension_category_info	file:
level_offset	src/html.h	/^		int level_offset;$/;"	m	struct:hoedown_html_renderer_state::__anon1
likely	src/escape.c	8;"	d	file:
linebreak	src/document.h	/^	int (*linebreak)(hoedown_buffer *ob, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
link	src/document.c	/^	hoedown_buffer *link;$/;"	m	struct:link_ref	file:
link	src/document.h	/^	int (*link)(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_buffer *link, const hoedown_buffer *title, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
link_attributes	src/html.h	/^	void (*link_attributes)(hoedown_buffer *ob, const hoedown_buffer *url, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_html_renderer_state
link_ref	src/document.c	/^struct link_ref {$/;"	s	file:
list	src/document.h	/^	void (*list)(hoedown_buffer *ob, const hoedown_buffer *content, hoedown_list_flags flags, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
listitem	src/document.h	/^	void (*listitem)(hoedown_buffer *ob, const hoedown_buffer *content, hoedown_list_flags flags, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
main	bin/hoedown.c	/^main(int argc, char **argv)$/;"	f
main	bin/smartypants.c	/^main(int argc, char **argv)$/;"	f
markdown_char_ptrs	src/document.c	/^static char_trigger markdown_char_ptrs[] = {$/;"	v	file:
markdown_char_t	src/document.c	/^enum markdown_char_t {$/;"	g	file:
math	src/document.h	/^	int (*math)(hoedown_buffer *ob, const hoedown_buffer *text, int displaymode, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
max_nesting	bin/hoedown.c	/^	size_t max_nesting;$/;"	m	struct:option_data	file:
max_nesting	src/document.c	/^	size_t max_nesting;$/;"	m	struct:hoedown_document	file:
md	src/document.c	/^	hoedown_renderer md;$/;"	m	struct:hoedown_document	file:
metaclass	test/runner.py	/^    class metaclass(meta):$/;"	c	function:with_metaclass
negative_prefix	bin/hoedown.c	/^static const char *negative_prefix = "no-";$/;"	v	file:
nesting_level	src/html.h	/^		int nesting_level;$/;"	m	struct:hoedown_html_renderer_state::__anon1
newbuf	src/document.c	/^newbuf(hoedown_document *doc, int type)$/;"	f	file:
next	src/document.c	/^	struct footnote_item *next;$/;"	m	struct:footnote_item	typeref:struct:footnote_item::footnote_item	file:
next	src/document.c	/^	struct link_ref *next;$/;"	m	struct:link_ref	typeref:struct:link_ref::link_ref	file:
normal_text	src/document.h	/^	void (*normal_text)(hoedown_buffer *ob, const hoedown_buffer *text, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
num	src/document.c	/^	unsigned int num;$/;"	m	struct:footnote_ref	file:
opaque	src/document.h	/^	void *opaque;$/;"	m	struct:hoedown_renderer
opaque	src/document.h	/^	void *opaque;$/;"	m	struct:hoedown_renderer_data
opaque	src/html.h	/^	void *opaque;$/;"	m	struct:hoedown_html_renderer_state
option_data	bin/hoedown.c	/^struct option_data {$/;"	s	file:
option_data	bin/smartypants.c	/^struct option_data {$/;"	s	file:
option_name	bin/hoedown.c	/^	const char *option_name;$/;"	m	struct:extension_category_info	file:
option_name	bin/hoedown.c	/^	const char *option_name;$/;"	m	struct:extension_info	file:
option_name	bin/hoedown.c	/^	const char *option_name;$/;"	m	struct:html_flag_info	file:
ounit	bin/hoedown.c	/^	size_t ounit;$/;"	m	struct:option_data	file:
ounit	bin/smartypants.c	/^	size_t ounit;$/;"	m	struct:option_data	file:
paragraph	src/document.h	/^	void (*paragraph)(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
parse_argument	bin/hoedown.c	/^parse_argument(int argn, char *arg, int is_forced, void *opaque)$/;"	f
parse_argument	bin/smartypants.c	/^parse_argument(int argn, char *arg, int is_forced, void *opaque)$/;"	f
parse_atxheader	src/document.c	/^parse_atxheader(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t size)$/;"	f	file:
parse_block	src/document.c	/^parse_block(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t size)$/;"	f	file:
parse_blockcode	src/document.c	/^parse_blockcode(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t size)$/;"	f	file:
parse_blockquote	src/document.c	/^parse_blockquote(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t size)$/;"	f	file:
parse_category_option	bin/hoedown.c	/^parse_category_option(char *opt, struct option_data *data)$/;"	f
parse_codefence	src/document.c	/^parse_codefence(uint8_t *data, size_t size, hoedown_buffer *lang, size_t *width, uint8_t *chr)$/;"	f	file:
parse_emph1	src/document.c	/^parse_emph1(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t size, uint8_t c)$/;"	f	file:
parse_emph2	src/document.c	/^parse_emph2(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t size, uint8_t c)$/;"	f	file:
parse_emph3	src/document.c	/^parse_emph3(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t size, uint8_t c)$/;"	f	file:
parse_fencedcode	src/document.c	/^parse_fencedcode(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t size)$/;"	f	file:
parse_flag_option	bin/hoedown.c	/^parse_flag_option(char *opt, struct option_data *data)$/;"	f
parse_footnote_def	src/document.c	/^parse_footnote_def(hoedown_buffer *ob, hoedown_document *doc, unsigned int num, uint8_t *data, size_t size)$/;"	f	file:
parse_footnote_list	src/document.c	/^parse_footnote_list(hoedown_buffer *ob, hoedown_document *doc, struct footnote_list *footnotes)$/;"	f	file:
parse_htmlblock	src/document.c	/^parse_htmlblock(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t size, int do_render)$/;"	f	file:
parse_inline	src/document.c	/^parse_inline(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t size)$/;"	f	file:
parse_list	src/document.c	/^parse_list(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t size, hoedown_list_flags flags)$/;"	f	file:
parse_listitem	src/document.c	/^parse_listitem(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t size, hoedown_list_flags *flags)$/;"	f	file:
parse_long_option	bin/hoedown.c	/^parse_long_option(char *opt, char *next, void *opaque)$/;"	f
parse_long_option	bin/smartypants.c	/^parse_long_option(char *opt, char *next, void *opaque)$/;"	f
parse_math	src/document.c	/^parse_math(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t offset, size_t size, const char *end, size_t delimsz, int displaymode)$/;"	f	file:
parse_negative_option	bin/hoedown.c	/^parse_negative_option(char *opt, struct option_data *data)$/;"	f
parse_options	bin/common.h	/^parse_options($/;"	f
parse_paragraph	src/document.c	/^parse_paragraph(hoedown_buffer *ob, hoedown_document *doc, uint8_t *data, size_t size)$/;"	f	file:
parse_short_option	bin/hoedown.c	/^parse_short_option(char opt, char *next, void *opaque)$/;"	f
parse_short_option	bin/smartypants.c	/^parse_short_option(char opt, char *next, void *opaque)$/;"	f
parse_table	src/document.c	/^parse_table($/;"	f	file:
parse_table_header	src/document.c	/^parse_table_header($/;"	f	file:
parse_table_row	src/document.c	/^parse_table_row($/;"	f	file:
parseint	bin/common.h	/^parseint(const char *string, long *result)$/;"	f
popbuf	src/document.c	/^popbuf(hoedown_document *doc, int type)$/;"	f	file:
prefix_code	src/document.c	/^prefix_code(uint8_t *data, size_t size)$/;"	f	file:
prefix_oli	src/document.c	/^prefix_oli(uint8_t *data, size_t size)$/;"	f	file:
prefix_quote	src/document.c	/^prefix_quote(uint8_t *data, size_t size)$/;"	f	file:
prefix_uli	src/document.c	/^prefix_uli(uint8_t *data, size_t size)$/;"	f	file:
print_help	bin/hoedown.c	/^print_help(const char *basename)$/;"	f
print_help	bin/smartypants.c	/^print_help(const char *basename)$/;"	f
print_option	bin/common.h	/^print_option(char short_opt, const char *long_opt, const char *description)$/;"	f
print_version	bin/common.h	/^print_version()$/;"	f
quote	src/document.h	/^	int (*quote)(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
raw_html	src/document.h	/^	int (*raw_html)(hoedown_buffer *ob, const hoedown_buffer *text, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
ref	src/document.c	/^	struct footnote_ref *ref;$/;"	m	struct:footnote_item	typeref:struct:footnote_item::footnote_ref	file:
refs	src/document.c	/^	struct link_ref *refs[REF_TABLE_SIZE];$/;"	m	struct:hoedown_document	typeref:struct:hoedown_document::link_ref	file:
renderer	bin/hoedown.c	/^	enum renderer_type renderer;$/;"	m	struct:option_data	typeref:enum:option_data::renderer_type	file:
renderer_type	bin/hoedown.c	/^enum renderer_type {$/;"	g	file:
replace_spacing	src/document.c	/^replace_spacing(hoedown_buffer *ob, const uint8_t *data, size_t size)$/;"	f	file:
rndr_autolink	src/html.c	/^rndr_autolink(hoedown_buffer *ob, const hoedown_buffer *link, hoedown_autolink_type type, const hoedown_renderer_data *data)$/;"	f	file:
rndr_blockcode	src/html.c	/^rndr_blockcode(hoedown_buffer *ob, const hoedown_buffer *text, const hoedown_buffer *lang, const hoedown_renderer_data *data)$/;"	f	file:
rndr_blockquote	src/html.c	/^rndr_blockquote(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data)$/;"	f	file:
rndr_codespan	src/html.c	/^rndr_codespan(hoedown_buffer *ob, const hoedown_buffer *text, const hoedown_renderer_data *data)$/;"	f	file:
rndr_double_emphasis	src/html.c	/^rndr_double_emphasis(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data)$/;"	f	file:
rndr_emphasis	src/html.c	/^rndr_emphasis(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data)$/;"	f	file:
rndr_footnote_def	src/html.c	/^rndr_footnote_def(hoedown_buffer *ob, const hoedown_buffer *content, unsigned int num, const hoedown_renderer_data *data)$/;"	f	file:
rndr_footnote_ref	src/html.c	/^rndr_footnote_ref(hoedown_buffer *ob, unsigned int num, const hoedown_renderer_data *data)$/;"	f	file:
rndr_footnotes	src/html.c	/^rndr_footnotes(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data)$/;"	f	file:
rndr_header	src/html.c	/^rndr_header(hoedown_buffer *ob, const hoedown_buffer *content, int level, const hoedown_renderer_data *data)$/;"	f	file:
rndr_highlight	src/html.c	/^rndr_highlight(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data)$/;"	f	file:
rndr_hrule	src/html.c	/^rndr_hrule(hoedown_buffer *ob, const hoedown_renderer_data *data)$/;"	f	file:
rndr_image	src/html.c	/^rndr_image(hoedown_buffer *ob, const hoedown_buffer *link, const hoedown_buffer *title, const hoedown_buffer *alt, const hoedown_renderer_data *data)$/;"	f	file:
rndr_linebreak	src/html.c	/^rndr_linebreak(hoedown_buffer *ob, const hoedown_renderer_data *data)$/;"	f	file:
rndr_link	src/html.c	/^rndr_link(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_buffer *link, const hoedown_buffer *title, const hoedown_renderer_data *data)$/;"	f	file:
rndr_list	src/html.c	/^rndr_list(hoedown_buffer *ob, const hoedown_buffer *content, hoedown_list_flags flags, const hoedown_renderer_data *data)$/;"	f	file:
rndr_listitem	src/html.c	/^rndr_listitem(hoedown_buffer *ob, const hoedown_buffer *content, hoedown_list_flags flags, const hoedown_renderer_data *data)$/;"	f	file:
rndr_math	src/html.c	/^rndr_math(hoedown_buffer *ob, const hoedown_buffer *text, int displaymode, const hoedown_renderer_data *data)$/;"	f	file:
rndr_normal_text	src/html.c	/^rndr_normal_text(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data)$/;"	f	file:
rndr_paragraph	src/html.c	/^rndr_paragraph(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data)$/;"	f	file:
rndr_quote	src/html.c	/^rndr_quote(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data)$/;"	f	file:
rndr_raw_block	src/html.c	/^rndr_raw_block(hoedown_buffer *ob, const hoedown_buffer *text, const hoedown_renderer_data *data)$/;"	f	file:
rndr_raw_html	src/html.c	/^rndr_raw_html(hoedown_buffer *ob, const hoedown_buffer *text, const hoedown_renderer_data *data)$/;"	f	file:
rndr_strikethrough	src/html.c	/^rndr_strikethrough(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data)$/;"	f	file:
rndr_superscript	src/html.c	/^rndr_superscript(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data)$/;"	f	file:
rndr_table	src/html.c	/^rndr_table(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data)$/;"	f	file:
rndr_table_body	src/html.c	/^rndr_table_body(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data)$/;"	f	file:
rndr_table_header	src/html.c	/^rndr_table_header(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data)$/;"	f	file:
rndr_tablecell	src/html.c	/^rndr_tablecell(hoedown_buffer *ob, const hoedown_buffer *content, hoedown_table_flags flags, const hoedown_renderer_data *data)$/;"	f	file:
rndr_tablerow	src/html.c	/^rndr_tablerow(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data)$/;"	f	file:
rndr_triple_emphasis	src/html.c	/^rndr_triple_emphasis(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data)$/;"	f	file:
rndr_underline	src/html.c	/^rndr_underline(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data)$/;"	f	file:
show_time	bin/hoedown.c	/^	int show_time;$/;"	m	struct:option_data	file:
show_time	bin/smartypants.c	/^	int show_time;$/;"	m	struct:option_data	file:
size	src/buffer.h	/^	size_t size;	\/* size of the string *\/$/;"	m	struct:hoedown_buffer
size	src/stack.h	/^	size_t size;$/;"	m	struct:hoedown_stack
smartypants_cb__amp	src/html_smartypants.c	/^smartypants_cb__amp(hoedown_buffer *ob, struct smartypants_data *smrt, uint8_t previous_char, const uint8_t *text, size_t size)$/;"	f	file:
smartypants_cb__backtick	src/html_smartypants.c	/^smartypants_cb__backtick(hoedown_buffer *ob, struct smartypants_data *smrt, uint8_t previous_char, const uint8_t *text, size_t size)$/;"	f	file:
smartypants_cb__dash	src/html_smartypants.c	/^smartypants_cb__dash(hoedown_buffer *ob, struct smartypants_data *smrt, uint8_t previous_char, const uint8_t *text, size_t size)$/;"	f	file:
smartypants_cb__dquote	src/html_smartypants.c	/^smartypants_cb__dquote(hoedown_buffer *ob, struct smartypants_data *smrt, uint8_t previous_char, const uint8_t *text, size_t size)$/;"	f	file:
smartypants_cb__escape	src/html_smartypants.c	/^smartypants_cb__escape(hoedown_buffer *ob, struct smartypants_data *smrt, uint8_t previous_char, const uint8_t *text, size_t size)$/;"	f	file:
smartypants_cb__ltag	src/html_smartypants.c	/^smartypants_cb__ltag(hoedown_buffer *ob, struct smartypants_data *smrt, uint8_t previous_char, const uint8_t *text, size_t size)$/;"	f	file:
smartypants_cb__number	src/html_smartypants.c	/^smartypants_cb__number(hoedown_buffer *ob, struct smartypants_data *smrt, uint8_t previous_char, const uint8_t *text, size_t size)$/;"	f	file:
smartypants_cb__parens	src/html_smartypants.c	/^smartypants_cb__parens(hoedown_buffer *ob, struct smartypants_data *smrt, uint8_t previous_char, const uint8_t *text, size_t size)$/;"	f	file:
smartypants_cb__period	src/html_smartypants.c	/^smartypants_cb__period(hoedown_buffer *ob, struct smartypants_data *smrt, uint8_t previous_char, const uint8_t *text, size_t size)$/;"	f	file:
smartypants_cb__squote	src/html_smartypants.c	/^smartypants_cb__squote(hoedown_buffer *ob, struct smartypants_data *smrt, uint8_t previous_char, const uint8_t *text, size_t size)$/;"	f	file:
smartypants_cb_chars	src/html_smartypants.c	/^static const uint8_t smartypants_cb_chars[UINT8_MAX+1] = {$/;"	v	file:
smartypants_cb_ptrs	src/html_smartypants.c	/^static size_t (*smartypants_cb_ptrs[])$/;"	v	file:
smartypants_data	src/html_smartypants.c	/^struct smartypants_data {$/;"	s	file:
smartypants_quotes	src/html_smartypants.c	/^smartypants_quotes(hoedown_buffer *ob, uint8_t previous_char, uint8_t next_char, uint8_t quote, int *is_open)$/;"	f	file:
smartypants_squote	src/html_smartypants.c	/^smartypants_squote(hoedown_buffer *ob, struct smartypants_data *smrt, uint8_t previous_char, const uint8_t *text, size_t size,$/;"	f	file:
snprintf	src/html_smartypants.c	9;"	d	file:
squote_len	src/html_smartypants.c	/^squote_len(const uint8_t *text, size_t size)$/;"	f	file:
str	bin/common.h	8;"	d
strikethrough	src/document.h	/^	int (*strikethrough)(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
strncasecmp	src/autolink.c	11;"	d	file:
strncasecmp	src/document.c	13;"	d	file:
strprefix	bin/common.h	/^strprefix(const char *str, const char *prefix)$/;"	f
superscript	src/document.h	/^	int (*superscript)(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
table	src/document.h	/^	void (*table)(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
table_body	src/document.h	/^	void (*table_body)(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
table_cell	src/document.h	/^	void (*table_cell)(hoedown_buffer *ob, const hoedown_buffer *content, hoedown_table_flags flags, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
table_header	src/document.h	/^	void (*table_header)(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
table_row	src/document.h	/^	void (*table_row)(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
tag_length	src/document.c	/^tag_length(uint8_t *data, size_t size, hoedown_autolink_type *autolink)$/;"	f	file:
tail	src/document.c	/^	struct footnote_item *tail;$/;"	m	struct:footnote_list	typeref:struct:footnote_list::footnote_item	file:
title	src/document.c	/^	hoedown_buffer *title;$/;"	m	struct:link_ref	file:
toc_data	src/html.h	/^	} toc_data;$/;"	m	struct:hoedown_html_renderer_state	typeref:struct:hoedown_html_renderer_state::__anon1
toc_finalize	src/html.c	/^toc_finalize(hoedown_buffer *ob, int inline_render, const hoedown_renderer_data *data)$/;"	f	file:
toc_header	src/html.c	/^toc_header(hoedown_buffer *ob, const hoedown_buffer *content, int level, const hoedown_renderer_data *data)$/;"	f	file:
toc_level	bin/hoedown.c	/^	int toc_level;$/;"	m	struct:option_data	file:
toc_link	src/html.c	/^toc_link(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_buffer *link, const hoedown_buffer *title, const hoedown_renderer_data *data)$/;"	f	file:
triple_emphasis	src/document.h	/^	int (*triple_emphasis)(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
underline	src/document.h	/^	int (*underline)(hoedown_buffer *ob, const hoedown_buffer *content, const hoedown_renderer_data *data);$/;"	m	struct:hoedown_renderer
unit	src/buffer.h	/^	size_t unit;	\/* reallocation unit size (0 = read-only buffer) *\/$/;"	m	struct:hoedown_buffer
unlikely	src/escape.c	9;"	d	file:
unscape_text	src/document.c	/^unscape_text(hoedown_buffer *ob, hoedown_buffer *src)$/;"	f	file:
with_metaclass	test/runner.py	/^def with_metaclass(meta, *bases):$/;"	f
word_boundary	src/html_smartypants.c	/^word_boundary(uint8_t c)$/;"	f	file:
work_bufs	src/document.c	/^	hoedown_stack work_bufs[2];$/;"	m	struct:hoedown_document	file:
